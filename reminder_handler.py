from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import ContextTypes
from city_question import ask_city_question  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é
import logging


logger = logging.getLogger(__name__)


async def remind_membership(context: ContextTypes.DEFAULT_TYPE) -> None:
    # –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    keyboard = [
        [InlineKeyboardButton("‚úÖ Yes!", callback_data="yes")],
        [InlineKeyboardButton("‚ùå No", callback_data="no_second")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await context.bot.send_message(
        chat_id=context.job.data,
        text="It hasn't been long! Have you changed your mind? Do you want to become a member of the association?",
        reply_markup=reply_markup
    )

async def remind_membership_second(context: ContextTypes.DEFAULT_TYPE) -> None:
    # –í—Ç–æ—Ä–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —á–µ—Ä–µ–∑ 20 —Å–µ–∫—É–Ω–¥
    keyboard = [
        [InlineKeyboardButton("‚úÖ Yes!", callback_data="yes")],
        [InlineKeyboardButton("‚ùå No", callback_data="no_final")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await context.bot.send_message(
        chat_id=context.job.data,
        text="–ú—ã —Å–Ω–æ–≤–∞ —Å–ø—Ä–∞—à–∏–≤–∞–µ–º: –•–æ—Ç–∏—Ç–µ —Å—Ç–∞—Ç—å —á–ª–µ–Ω–æ–º –∞—Å—Å–æ—Ü–∏–∞—Ü–∏–∏? –≠—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!",
        reply_markup=reply_markup
    )

async def send_followup_message(context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"""
    chat_id = context.job.data  # –ò—Å–ø–æ–ª—å–∑—É–µ–º context.job.data
    await context.bot.send_message(
        chat_id=chat_id,
        text="Have you completed the registration form? Please select an option below:",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("Yes", callback_data="completed_yes")],
            [InlineKeyboardButton("No", callback_data="completed_no")]
        ])
    )

async def handle_yes(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ 'Yes' –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
    chat_id = update.callback_query.from_user.id
    await context.bot.send_message(
        chat_id=chat_id,
        text=(
        "Welcome to Kazaelt!\n\n"
        "We are delighted to have you join our community. Here‚Äôs all the information you need to get started:\n\n"
        "Website: [kazaelt.kz](https://kazaelt.kz/)\n"
        "Visit our website for comprehensive information about our activities, events, and resources.\n\n"
        "Annual conference website: [Tap here](https://kazaelt.kz/newconf)\n\n"
        "Social Media:\n"
        "- Instagram: [kazaelt](https://www.instagram.com/kazaelt?igsh=enQ4cGt5N3dzODc0)\n"
        "- Telegram Channel: [KazAELT members](https://t.me/+B0WNvNnla_Q2NDMy) | [Kazaelt on Air](https://t.me/kazaelt)\n\n"
        "Speaking Club:\n"
        "Join our Speaking Club every day at 8:00 p.m. [Join here](https://chat.whatsapp.com/JoK0Hm29bs33vyyuuD3s1R)\n\n"
        "Feel free to ask any questions [here](https://t.me/c/1864095672/2659).\n\n"
        "We are here to support each other and develop together.\n\n"
        "All questions can be written in the [Q&A chat](https://t.me/c/1864095672/2659).\n\n"
        "Local coordinators are also available to help you. To find the contact details of your regional coordinator, "
        "please reach out to the head of the coordinators: Gulfairuz teacher\n\n"
        "Membership manager: Aizhan teacher\n\n"
        "Once again, welcome to Kazaelt! We look forward to growing and learning with you."
    ), parse_mode="Markdown"
    )
    logger.info(f"–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")

    context.job_queue.run_once(ask_city_question, 10, data=chat_id)


async def handle_no(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ 'No' –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Å –≤–∞–∂–Ω–æ—Å—Ç—å—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    chat_id = update.callback_query.from_user.id
    await context.bot.send_message(
        chat_id=chat_id,
text="üîî Registration is very important for us to support you better. Please, consider completing it! üìã"
    )
    logger.info(f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –≤–∞–∂–Ω–æ—Å—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")

    # –ó–∞–ø—É—Å–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥
    context.job_queue.run_once(send_followup_message, 20, data=chat_id)

async def send_followup_message(context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è"""
    chat_id = context.job.data
    await context.bot.send_message(
        chat_id=chat_id,
text="‚úÖ Have you completed the registration form? Please select an option below:",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("‚úÖYes", callback_data="completed_yes")],
            [InlineKeyboardButton("‚ùåNo", callback_data="completed_no")]
        ])
    )
    logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤–æ–ø—Ä–æ—Å–æ–º –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
