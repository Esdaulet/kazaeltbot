import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def handle_approval(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    
    # –†–∞–∑–±–æ—Ä callback_data
    if "_" in query.data:
        action, user_id = query.data.split("_")
        user_id = int(user_id)
    else:
        action = query.data
        user_id = None  # –£—Å—Ç–∞–Ω–æ–≤–∏–º user_id –≤ None, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç

    if action == "approve" and user_id is not None:
        # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await context.bot.send_message(
            chat_id=user_id,
            text="We are delighted to have you join our community.\n\n"
            
                 "Please, first take your time and read the Charter of the Public Association KazAELT:\n"
                 "https://drive.google.com/file/d/1pm5uPOFu2Vx_i7VP9QBHmynNvjaB_nSM/view?pli=1",
        )
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")

        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        try:
            await query.edit_message_caption(caption="–ß–µ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.")
            logger.info(f"–ß–µ–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ  –¥–ª—è {user_id}.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–Ω–æ–ø–∫–∏ "I've read"
        await context.bot.send_message(
            chat_id=user_id,
            text="When you are done, please confirm by clicking the button below:",
            reply_markup=InlineKeyboardMarkup([ 
                [InlineKeyboardButton("üìñ I've read", callback_data="charter_read")]
            ])
        )
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ 'I've read' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")
    elif action == "reject" and user_id is not None:
        await context.bot.send_message(
            chat_id=user_id,
            text="Your check has been rejected. Please contact support or send a new receipt."
        )
        await query.edit_message_caption(caption="–ß–µ–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.")
        logger.info(f"–ß–µ–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –æ—Ç–∫–ª–æ–Ω—ë–Ω –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.")
   

